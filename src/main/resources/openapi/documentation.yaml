openapi: 3.0.0
info:
  title: Audio API and Member API
  version: 1.0.0
  description: API for managing audio files, generating recommendations, and handling user accounts.

paths:
  /audio:
    post:
      summary: Upload an audio file
      description: Upload an audio file with metadata, such as title, related text, and target information.
      requestBody:
        description: Multipart form-data request with audio file and metadata.
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Audio file to upload.
                id:
                  type: integer
                  description: The unique identifier for the audio entry.
                recieverId:
                  type: integer
                  description: ID of the recipient who will receive the audio.
                text:
                  type: string
                  description: Text transcribed from the audio file.
                title:
                  type: string
                  description: Title of the audio entry.
                processText:
                  type: string
                  description: Processed text generated by AI.
      responses:
        '200':
          description: Audio file uploaded successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudioDTO'
        '400':
          description: Invalid parameters or missing data.
        '500':
          description: Internal server error.

  /audio/{id}:
    get:
      summary: Retrieve audio metadata
      description: Fetch metadata and details of an audio entry by its unique ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Unique identifier of the audio.
      responses:
        '200':
          description: Successfully retrieved audio metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudioDTO'
        '404':
          description: Audio not found.

  /audio/file/{id}:
    get:
      summary: Download an audio file
      description: Download the audio file associated with the given ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Unique identifier of the audio file.
      responses:
        '200':
          description: Binary audio file download.
          content:
            audio/m4a:
              schema:
                type: string
                format: binary
        '404':
          description: File not found.

  /audio/error:
    get:
      summary: Simulate an error
      description: Test endpoint that triggers a `NotFoundException`.
      responses:
        '404':
          description: Simulated error.

  /audio/owner/{id}:
    get:
      summary: Get audios by owner
      description: Retrieve all audio entries created by a specific owner.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the audio's owner.
      responses:
        '200':
          description: List of audio entries owned by the specific user.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AudioDTO'
        '404':
          description: Owner not found.

  /audio/recommend/title:
    post:
      summary: Generate recommended titles using AI
      description: Process input texts and targets and provide AI-generated titles.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudioRecommendTitleDTO'
      responses:
        '200':
          description: Successfully generated recommendations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudioRecommendTitleResponseDTO'
        '400':
          description: Invalid input data.
        '500':
          description: Error processing the request.

  /audio/recommend/text:
    post:
      summary: Generate recommended texts using AI
      description: Let the AI generate recommended texts using inputs such as text and instructions.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudioRecommendTextDTO'
      responses:
        '200':
          description: Successfully processed recommended text.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudioRecommendTextResponseDTO'
        '400':
          description: Invalid input data.
        '500':
          description: Error processing the request.

  /member/{id}:
    get:
      summary: Retrieve member account information
      description: Fetch account details for a specific member using their unique ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Unique identifier of the member.
      responses:
        '200':
          description: Successfully retrieved member details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberResponseDTO'
        '404':
          description: Member not found.

  /member:
    post:
      summary: Login a member
      description: Authenticate a member using their credentials.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberLoginDTO'
      responses:
        '200':
          description: Successfully authenticated the member.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberResponseDTO'
        '401':
          description: Invalid credentials.

  /member/follow:
    post:
      summary: Add a follow relationship
      description: Establish a follow relationship between two members using their IDs.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberCreateFollowDTO'
      responses:
        '201':
          description: Successfully followed the member.
        '404':
          description: Member not found.

components:
  schemas:
    AudioDTO:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the audio.
        title:
          type: string
          description: Title of the audio letter.
        owner:
          $ref: '#/components/schemas/MemberResponseDTO'
        reciever:
          $ref: '#/components/schemas/MemberResponseDTO'
        audio:
          type: string
          description: File path of the uploaded audio file.
        text:
          type: string
          description: Raw text extracted from the audio.
        processText:
          type: string
          description: AI-enhanced processed text.
        createdAt:
          type: string
          format: date-time
          description: The creation time of the audio entry.

    AudioRecommendTitleDTO:
      type: object
      properties:
        text:
          type: string
          description: Extracted text used for generating title recommendations.
        target:
          type: string
          description: Target audience or purpose of the audio letter.

    AudioRecommendTitleResponseDTO:
      type: object
      properties:
        title:
          type: string
          description: AI-generated title.
        rating:
          type: integer
          description: Sentiment score of the title (lower values are negative).

    AudioRecommendTextDTO:
      type: object
      properties:
        text:
          type: string
          description: Extracted text from the audio for processing.
        target:
          type: string
          description: Target usage of processed text.
        instruction:
          type: string
          description: Custom instructions for the AI.

    AudioRecommendTextResponseDTO:
      type: object
      properties:
        processed_content:
          type: string
          description: AI-generated processed text.

    MemberDTO:
      type: object
      properties:
        id:
          type: integer
          description: Member's unique ID.
        username:
          type: string
          description: Member's username.
        password:
          type: string
          description: Member login password.

    MemberResponseDTO:
      type: object
      properties:
        id:
          type: integer
          description: Member's unique ID.
        username:
          type: string
          description: Member's username.

    MemberLoginDTO:
      type: object
      properties:
        id:
          type: integer
          description: Member's unique ID.
        password:
          type: string
          description: Password for the member login.

    MemberFollowDTO:
      type: object
      properties:
        id:
          type: integer
          description: Followed member ID.
        username:
          type: string
          description: Followed member username.

    MemberCreateFollowDTO:
      type: object
      properties:
        followerId:
          type: integer
          description: ID of the member initiating the follow request.
        followeeId:
          type: integer
          description: ID of the member receiving the follow request.